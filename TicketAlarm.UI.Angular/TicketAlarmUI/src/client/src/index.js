/**
 * TicketAlarm
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AlarmDto from './model/AlarmDto';
import ArtistDto from './model/ArtistDto';
import AvailabilityDto from './model/AvailabilityDto';
import BaseArtistDto from './model/BaseArtistDto';
import BaseShowDto from './model/BaseShowDto';
import LoginUserDto from './model/LoginUserDto';
import ShowDto from './model/ShowDto';
import AlarmApi from './api/AlarmApi';
import ArtistApi from './api/ArtistApi';
import AvailabilityApi from './api/AvailabilityApi';
import EmailApi from './api/EmailApi';
import ShowApi from './api/ShowApi';
import UserApi from './api/UserApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TicketAlarm = require('index'); // See note below*.
* var xxxSvc = new TicketAlarm.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TicketAlarm.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TicketAlarm.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TicketAlarm.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AlarmDto model constructor.
     * @property {module:model/AlarmDto}
     */
    AlarmDto,

    /**
     * The ArtistDto model constructor.
     * @property {module:model/ArtistDto}
     */
    ArtistDto,

    /**
     * The AvailabilityDto model constructor.
     * @property {module:model/AvailabilityDto}
     */
    AvailabilityDto,

    /**
     * The BaseArtistDto model constructor.
     * @property {module:model/BaseArtistDto}
     */
    BaseArtistDto,

    /**
     * The BaseShowDto model constructor.
     * @property {module:model/BaseShowDto}
     */
    BaseShowDto,

    /**
     * The LoginUserDto model constructor.
     * @property {module:model/LoginUserDto}
     */
    LoginUserDto,

    /**
     * The ShowDto model constructor.
     * @property {module:model/ShowDto}
     */
    ShowDto,

    /**
    * The AlarmApi service constructor.
    * @property {module:api/AlarmApi}
    */
    AlarmApi,

    /**
    * The ArtistApi service constructor.
    * @property {module:api/ArtistApi}
    */
    ArtistApi,

    /**
    * The AvailabilityApi service constructor.
    * @property {module:api/AvailabilityApi}
    */
    AvailabilityApi,

    /**
    * The EmailApi service constructor.
    * @property {module:api/EmailApi}
    */
    EmailApi,

    /**
    * The ShowApi service constructor.
    * @property {module:api/ShowApi}
    */
    ShowApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi
};
